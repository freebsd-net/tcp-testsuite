#!/usr/bin/env sh
#
# Copyright (c) 2016 Michael Tuexen
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

packetdrill=/usr/local/bin/packetdrill
delay=1
timelimit=10
testcases="rcv-rst-without-data-syn-sent-outside-left-ipv4 \
           rcv-rst-without-data-syn-sent-outside-left-ipv6 \
           rcv-rst-without-data-syn-sent-left-edge-ipv4 \
           rcv-rst-without-data-syn-sent-left-edge-ipv6 \
           rcv-rst-without-data-syn-sent-outside-right-ipv4 \
           rcv-rst-without-data-syn-sent-outside-right-ipv6 \
           rcv-rst-with-data-syn-sent-outside-left-ipv4 \
           rcv-rst-with-data-syn-sent-outside-left-ipv6 \
           rcv-rst-with-data-syn-sent-left-edge-ipv4 \
           rcv-rst-with-data-syn-sent-left-edge-ipv6 \
           rcv-rst-with-data-syn-sent-outside-right-ipv4 \
           rcv-rst-with-data-syn-sent-outside-right-ipv6"

rootdir=`/usr/bin/dirname $0`
passed=0
failed=0
run=0
skipped=0
timedout=0
killed=0
first=1

printf "Name                                                                    Verdict\n"
printf "===============================================================================\n"
for testcase in $testcases
do
  printf "%-68.68s " `/usr/bin/basename $testcase`
  if [ $first -eq 0 ] ; then
    if [ $delay -ne 0 ] ; then
      if [ -t 1 ] ; then
        printf "\033[33m%10s\033[0m" "WAITING"
      fi
      sleep $delay
      if [ -t 1 ] ; then
        printf "\b\b\b\b\b\b\b\b\b\b"
      fi
    fi
  else
    first=0
  fi
  if [ -t 1 ] ; then
    printf "\033[33m%10s\033[0m" "RUNNING"
  fi
  if [ -f ${rootdir}/${testcase}.pkt ] ; then
    timeout $timelimit $packetdrill ${rootdir}/${testcase}.pkt >/dev/null 2>${rootdir}/${testcase}.out
    result=$?
    found=1
  else
    found=0
  fi
  if [ -t 1 ] ; then
    printf "\b\b\b\b\b\b\b\b\b\b"
  fi
  if [ $found -eq 1 ] ; then
    case $result in
      0)
         passed=`expr $passed + 1`
         if [ -t 1 ] ; then
           printf "\033[32m%10s\033[0m\n" "PASSED"
         else
           printf "%10s\n" "PASSED"
         fi
         ;;
      1)
         failed=`expr $failed + 1`
         if [ -t 1 ] ; then
           printf "\033[31m%10s\033[0m\n" "FAILED"
         else
           printf "%10s\n" "FAILED"
         fi
         ;;
      124)
         timedout=`expr $timedout + 1`
         if [ -t 1 ] ; then
           printf "\033[35m%10s\033[0m\n" "TIMEDOUT"
         else
           printf "%10s\n" "TIMEDOUT"
         fi
         ;;
      129|1[345]?|16[01])
         killed=`expr $killed + 1`
         if [ -t 1 ] ; then
           printf "\033[30m%10s\033[0m\n" "KILLED(`expr $result - 128`)"
         else
           printf "%10s\n" "KILLED(`expr $result - 128`)"
         fi
         ;;
      *)
         if [ -t 1 ] ; then
           printf "\033[36m%10s\033[0m\n" "UNKNOWN"
         else
           printf "%10s\n" "UNKNOWN"
         fi
         ;;
    esac
    run=`expr $run + 1`
  else
    if [ -t 1 ] ; then
      printf "\033[34m%10s\033[0m\n" "SKIPPED"
    else
      printf "%10s\n" "SKIPPED"
    fi
    skipped=`expr $skipped + 1`
  fi
done
printf "===============================================================================\n"
printf "Summary: Number of tests run:       %3u\n" $run
printf "         Number of tests passed:    %3u\n" $passed
printf "         Number of tests failed:    %3u\n" $failed
printf "         Number of tests timed out: %3u\n" $timedout
printf "         Number of tests skipped:   %3u\n" $skipped
if [ $killed -gt 0 ] ; then
  printf "         Number of tests killed:    %3u\n" $killed
fi
