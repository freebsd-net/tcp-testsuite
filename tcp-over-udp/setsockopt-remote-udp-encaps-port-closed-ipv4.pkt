//
// Copyright (c) 2017 Michael Tuexen
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//

--ip_version=ipv4
--udp_encapsulation=tcp

// Ensure that all relevant sysctl variables have their default values.
 0.00 `sysctl -w net.inet.tcp.syncookies_only=0`
+0.00 `sysctl -w net.inet.tcp.syncookies=1`
+0.00 `sysctl -w net.inet.tcp.rfc1323=1`
+0.00 `sysctl -w net.inet.tcp.sack.enable=1`
+0.00 `sysctl -w net.inet.tcp.ecn.enable=2`
+0.00 `sysctl -w net.inet.tcp.recvspace=65536`
+0.00 `sysctl -w kern.ipc.maxsockbuf=2097152`
// Flush host cache.
+0.00 `sysctl -w net.inet.tcp.hostcache.purgenow=1`
// Ensure that the relevant sysctl variables have their value.
+0.00 `sysctl -w net.inet.tcp.udp_tunneling_port=9811`
+0.00 `sysctl -w net.inet.tcp.udp_tunneling_overhead=8`
+0.00 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [-2147483648], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [-1], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], 4) = 0
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [1], 4) = 0
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [1], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], 4) = 0
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65536], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [2147483647], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], [4]) = 0
+0.00 `sysctl -w net.inet.tcp.udp_tunneling_port=0`
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [-2147483648], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [-1], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], 4) = 0
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [1], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65535], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [65536], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 setsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [2147483647], 4) = -1 EINVAL (Invalid argument)
+0.00 getsockopt(3, IPPROTO_TCP, TCP_REMOTE_UDP_ENCAPS_PORT, [0], [4]) = 0
+0.00 close(3) = 0
